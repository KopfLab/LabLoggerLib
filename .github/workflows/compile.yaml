name: Compile Firmware

on:
  workflow_dispatch:  
  push:
    paths:
      - test/**
      - Logger*/**
      - .github/workflows/compile.yaml

jobs:
  compile:
    runs-on: ubuntu-latest

    name: ${{ matrix.program.src }}-${{ matrix.platform.name }}-${{ matrix.platform.version }}

    strategy:
      fail-fast: false
      matrix:
        platform: 
          - {name: 'p2', version: '6.3.2'}
#          - {name: 'argon', version: '4.2.0'}
#          - {name: 'photon', version: '2.3.1'}
        program:
          - src: 'blink'
            lib: 'DeviceNameHelperRK MyLib'
          - src: 'publish'
            lib: 'DeviceNameHelperRK FileHelperRK SequentialFileRK PublishQueueExtRK SparkFun_Qwiic_OpenLog_Arduino_Library'
            aux: 'LoggerCore/src/LoggerPlatform* LoggerCore/src/LoggerUtils* LoggerCore/src/LoggerPublisher* LoggerCore/src/LoggerSD*'
          - src: 'controller'
            lib: 'LoggerCore DeviceNameHelperRK FileHelperRK SequentialFileRK PublishQueueExtRK SparkFun_Qwiic_OpenLog_Arduino_Library'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive 

      - name: Gather application sources 
        run: |
          echo "Creating temporary source directory"
          mkdir ${{ matrix.program.src }}
          echo "Including sources from test/${{ matrix.program.src }}"
          mv test/${{ matrix.program.src }}/* ${{ matrix.program.src }} 
          echo "Including libraries:"
          for lib in ${{ matrix.program.lib }}; do
            if [ -d "$lib" ]; then
              echo " - $lib/src/*"
              mv $lib/src/* ${{ matrix.program.src }}
            elif [ -d "lib/$lib" ]; then
              echo " - lib/$lib/src/*"
              mv lib/$lib/src/* ${{ matrix.program.src }}
            else
              echo " - could not find $lib, make sure the library exists"
            fi
          done
          echo "Including auxiliary resources:"
          for aux in ${{ matrix.program.aux }}; do
            echo " - $aux"
            mv $aux ${{ matrix.program.src }}
          done

      - name: Compile in cloud
        id: compile
        uses: particle-iot/compile-action@v1
        with:
          particle-access-token: ${{ secrets.PARTICLE_ACCESS_TOKEN }}
          particle-platform-name: ${{ matrix.platform.name }}
          device-os-version: ${{ matrix.platform.version }}
          sources-folder: ${{ matrix.program.src }}

      - name: Move binary
        run: |
          mv ${{ steps.compile.outputs.firmware-path }} ${{ matrix.program.src }}/${{ matrix.program.src }}-${{ matrix.platform.name }}-${{ matrix.platform.version }}.bin

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.program.src }}-${{ matrix.platform.name }}-${{ matrix.platform.version }}
          path: ${{ matrix.program.src }}

      - name: Compile locally to debug
        if: ${{ failure() }}
        uses: particle-iot/compile-action@v1
        with:
          particle-platform-name: ${{ matrix.platform.name }}
          device-os-version: ${{ matrix.platform.version }}
          sources-folder: ${{ matrix.program.src }}